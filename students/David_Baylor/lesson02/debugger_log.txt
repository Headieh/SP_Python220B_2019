PS C:\Users\dbayl\Projects\pythonCertificate\SP_Python220B_2019\students\David_Baylor\lesson02> python -m pdb charges_calc.py -i source.json -o out.json                                                                                     > c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(3)<module>()
-> '''
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(4)<module>()
-> import argparse
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(5)<module>()
-> import json
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(6)<module>()
-> import datetime
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(7)<module>()
-> import math
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(9)<module>()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(17)<module>()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(25)<module>()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(39)<module>()
-> def save_to_json(filename, data):
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(43)<module>()
-> if __name__ == "__main__":
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(44)<module>()
-> args = parse_cmd_arguments()
(Pdb) s
--Call--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(9)parse_cmd_arguments()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(10)parse_cmd_arguments()
-> parser = argparse.ArgumentParser(description='Process some integers.')
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(11)parse_cmd_arguments()
-> parser.add_argument('-i', '--input', help='input JSON file', required=True)
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(12)parse_cmd_arguments()
-> parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(14)parse_cmd_arguments()
-> return parser.parse_args()
(Pdb) n
--Return--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(14)parse_cmd_arguments()->Namespace(inp...ut='out.json')
-> return parser.parse_args()
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(45)<module>()
-> data = load_rentals_file(args.input)
(Pdb) s
--Call--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(17)load_rentals_file()
-> def load_rentals_file(filename):
(Pdb) s
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(18)load_rentals_file()
-> with open(filename) as file:
(Pdb) s
--Call--
> <frozen importlib._bootstrap>(978)_find_and_load()
(Pdb) n
> <frozen importlib._bootstrap>(980)_find_and_load()
(Pdb) quit
PS C:\Users\dbayl\Projects\pythonCertificate\SP_Python220B_2019\students\David_Baylor\lesson02> python -m pdb charges_calc.py -i source.json -o out.json                                                                                     > c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(3)<module>()
-> '''
(Pdb) b 45
Breakpoint 1 at c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py:45
(Pdb) c
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(45)<module>()
-> data = load_rentals_file(args.input)
(Pdb) s
--Call--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(17)load_rentals_file()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(18)load_rentals_file()
-> with open(filename) as file:
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(19)load_rentals_file()
-> try:
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(20)load_rentals_file()
-> data = json.load(file)
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(23)load_rentals_file()
-> return data
(Pdb) n
--Return--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(23)load_rentals_file()->{'RNT001': {'price_per_day': 31, 'product_code': 'PRD80', 'rental_end': '3/22/17', 'rental_start': '6/12/17', ...}, 'RNT002': {'price_per_day': 16, 'product_code': 'PRD11', 'rental_end': '9/30/18', 'rental_start': '7/20/16', ...}, 'RNT003': {'price_per_day': 40, 'product_code': 'PRD22', 'rental_end': '6/4/17', 'rental_start': '2/1/16', ...}, 'RNT004': {'price_per_day': 40, 'product_code': 'PRD86', 'rental_end': '12/7/17', 'rental_start': '8/14/16', ...}, ...}
-> return data
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(46)<module>()
-> data = calculate_additional_fields(data)
(Pdb)  

<<< I printed data here >>>

 'RNT990': {'price_per_day': 7,
            'product_code': 'PRD9',
            'rental_end': '4/24/18',
            'rental_start': '5/7/16',
            'units_rented': 9},
 'RNT991': {'price_per_day': 38,
            'product_code': 'PRD71',
            'rental_end': '11/18/16',
            'rental_start': '6/17/16',
            'units_rented': 9},
 'RNT992': {'price_per_day': 37,
            'product_code': 'PRD68',
            'rental_end': '9/8/18',
            'rental_start': '3/10/18',
            'units_rented': 5},
 'RNT993': {'price_per_day': 24,
            'product_code': 'PRD87',
            'rental_end': '12/10/17',
            'rental_start': '5/26/16',
            'units_rented': 8},
 'RNT994': {'price_per_day': 30,
            'product_code': 'PRD42',
            'rental_end': '1/2/17',
            'rental_start': '6/4/17',
            'units_rented': 5},
 'RNT995': {'price_per_day': 10,
            'product_code': 'PRD0',
            'rental_end': '1/28/18',
            'rental_start': '9/7/16',
            'units_rented': 10},
 'RNT996': {'price_per_day': 40,
            'product_code': 'PRD4',
            'rental_end': '1/25/18',
            'rental_start': '7/5/16',
            'units_rented': 6},
 'RNT997': {'price_per_day': 11,
            'product_code': 'PRD30',
            'rental_end': '1/29/18',
            'rental_start': '4/25/16',
            'units_rented': 1},
 'RNT998': {'price_per_day': 30,
            'product_code': 'PRD73',
            'rental_end': '4/14/16',
            'rental_start': '9/2/18',
            'units_rented': 7},
 'RNT999': {'price_per_day': 36,
            'product_code': 'PRD69',
            'rental_end': '10/2/16',
            'rental_start': '10/12/18',
            'units_rented': 8}}
(Pdb) ll
  1     '''
  2     Returns total price paid for individual rentals
  3     '''
  4     import argparse
  5     import json
  6     import datetime
  7     import math
  8
  9     def parse_cmd_arguments():
 10         parser = argparse.ArgumentParser(description='Process some integers.')
 11         parser.add_argument('-i', '--input', help='input JSON file', required=True)
 12         parser.add_argument('-o', '--output', help='ouput JSON file', required=True)
 13
 14         return parser.parse_args()
 15
 16
 17     def load_rentals_file(filename):
 18         with open(filename) as file:
 19             try:
 20                 data = json.load(file)
 21             except:
 22                 exit(0)
 23         return data
 24
 25     def calculate_additional_fields(data):
 26         for value in data.values():
 27             try:
 28                 rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
 29                 rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
 30                 value['total_days'] = (rental_end - rental_start).days
 31                 value['total_price'] = value['total_days'] * value['price_per_day']
 32                 value['sqrt_total_price'] = math.sqrt(value['total_price'])
 33                 value['unit_cost'] = value['total_price'] / value['units_rented']
 34             except:
 35                 exit(0)
 36
 37         return data
 38
 39     def save_to_json(filename, data):
 40         with open(filename, 'w') as file:
 41             json.dump(data, file)
 42
 43     if __name__ == "__main__":
 44         args = parse_cmd_arguments()
 45 B       data = load_rentals_file(args.input)
 46  ->     data = calculate_additional_fields(data)
 47         save_to_json(args.output, data)
(Pdb) s
--Call--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(25)calculate_additional_fields()
-> def calculate_additional_fields(data):
(Pdb) ll
 25  -> def calculate_additional_fields(data):
 26         for value in data.values():
 27             try:
 28                 rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
 29                 rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
 30                 value['total_days'] = (rental_end - rental_start).days
 31                 value['total_price'] = value['total_days'] * value['price_per_day']
 32                 value['sqrt_total_price'] = math.sqrt(value['total_price'])
 33                 value['unit_cost'] = value['total_price'] / value['units_rented']
 34             except:
 35                 exit(0)
 36
 37         return data
(Pdb) s
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(26)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(27)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(28)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(29)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(30)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(31)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
ValueError: math domain error
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(32)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(34)calculate_additional_fields()
-> except:
(Pdb) n
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
(Pdb) n
SystemExit: 0
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(35)calculate_additional_fields()
-> exit(0)
(Pdb) n
--Return--
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(35)calculate_additional_fields()->None
-> exit(0)
(Pdb) n
SystemExit: 0
> c:\users\dbayl\projects\pythoncertificate\sp_python220b_2019\students\david_baylor\lesson02\charges_calc.py(46)<module>()
-> data = calculate_additional_fields(data)
(Pdb) n
SystemExit: 0
> <string>(1)<module>()->None
(Pdb)

<<< I printed data here >>>

 'RNT990': {'price_per_day': 7,
            'product_code': 'PRD9',
            'rental_end': '4/24/18',
            'rental_start': '5/7/16',
            'units_rented': 9},
 'RNT991': {'price_per_day': 38,
            'product_code': 'PRD71',
            'rental_end': '11/18/16',
            'rental_start': '6/17/16',
            'units_rented': 9},
 'RNT992': {'price_per_day': 37,
            'product_code': 'PRD68',
            'rental_end': '9/8/18',
            'rental_start': '3/10/18',
            'units_rented': 5},
 'RNT993': {'price_per_day': 24,
            'product_code': 'PRD87',
            'rental_end': '12/10/17',
            'rental_start': '5/26/16',
            'units_rented': 8},
 'RNT994': {'price_per_day': 30,
            'product_code': 'PRD42',
            'rental_end': '1/2/17',
            'rental_start': '6/4/17',
            'units_rented': 5},
 'RNT995': {'price_per_day': 10,
            'product_code': 'PRD0',
            'rental_end': '1/28/18',
            'rental_start': '9/7/16',
            'units_rented': 10},
 'RNT996': {'price_per_day': 40,
            'product_code': 'PRD4',
            'rental_end': '1/25/18',
            'rental_start': '7/5/16',
            'units_rented': 6},
 'RNT997': {'price_per_day': 11,
            'product_code': 'PRD30',
            'rental_end': '1/29/18',
            'rental_start': '4/25/16',
            'units_rented': 1},
 'RNT998': {'price_per_day': 30,
            'product_code': 'PRD73',
            'rental_end': '4/14/16',
            'rental_start': '9/2/18',
            'units_rented': 7},
 'RNT999': {'price_per_day': 36,
            'product_code': 'PRD69',
            'rental_end': '10/2/16',
            'rental_start': '10/12/18',
            'units_rented': 8}}
(Pdb) ll
*** could not get source code
(Pdb) n
--Return--
> <string>(1)<module>()->None
(Pdb)